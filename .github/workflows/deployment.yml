name: Execute API and Load Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Robot Framework libraries
        run: |
          python -m pip install --upgrade pip
          pip install robotframework requests robotframework-requests
          pip install robotframework-jsonlibrary
          pip install robotframework-seleniumlibrary
          pip install urllib3
          pip install robotframework-stringformat


      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq gnupg software-properties-common

      - name: Install Docker
        uses: docker/setup-buildx-action@v4

      - name: Install K6
        run: |
          curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Manually create .env file
        run: |
          echo "EC_DATA_DIR=/tmp/nethermind/data" >> .env
          echo "EC_JWT_SECRET_PATH=/tmp/jwt/jwtsecret" >> .env
          echo "EC_IMAGE_VERSION=nethermindeth/nethermind:master" >> .env
          echo "NETWORK=chiado" >> .env
          echo "NETHERMIND_LOG_LEVEL=info" >> .env
          echo "CC_DATA_DIR=/tmp/lighthouse" >> .env
          echo "CC_JWT_SECRET_PATH=/tmp/jwt/jwtsecret" >> .env
          echo "CC_IMAGE_VERSION=sigp/lighthouse:latest" >> .env
          echo "CC_PEER_COUNT=50" >> .env
          echo "EC_AUTH_URL=http://139.144.26.89:8551" >> .env
          echo "EC_API_URL=http://139.144.26.89:8545" >> .env
          echo "CC_LOG_LEVEL=info" >> .env

      - name: Download Sedge sources
        run: |
          echo "Downloading sedge sources..."
          curl -L https://github.com/NethermindEth/sedge/releases/download/v1.3.2/sedge-v1.3.2-linux-amd64 --output sedge
          chmod +x sedge
          echo "Sources downloaded."
      
      - name: Run Sedge
        run: |
          echo 'Running sedge...'
          ./sedge generate full-node --logging none --no-mev-boost --no-validator --network chiado \
          -c lighthouse -e nethermind \
          --checkpoint-sync-url=http://139.144.26.89:4000/
          ./sedge run

      - name: Verify eth client synchronization
        run: |
          JSON_RPC_URL="http://139.144.26.89:4000"
          response=$(curl --data '{"method":"eth_syncing","params":[],"id":1,"jsonrpc":"2.0"}' -H "Content-Type: application/json" -X POST $JSON_RPC_URL)
          if echo "$response" | grep -q '"result":false'; then
            echo "Syncing completed"
          else
            echo "Syncing in progress"
          fi

      - name: Run Robot Framework tests
        run: |
          robot -d Tests/API/results Tests/API

      - name: Run K6 load tests
        run: |
          mkdir -p PerformanceTests/k6/results
          k6 run --out csv=PerformanceTests/k6/results/report.csv PerformanceTests/k6/script.js

      - name: Upload Robot Framework results
        uses: actions/upload-artifact@v4
        with:
          name: robot-results
          path: Tests/API/results/report.html

      - name: Upload K6 results
        uses: actions/upload-artifact@v4
        with:
          name: k6-results
          path: PerformanceTests/k6/results/report.csv
