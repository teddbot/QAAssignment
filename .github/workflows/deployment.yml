name: Run API and Load Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Robot Framework libraries
        run: |
          python -m pip install --upgrade pip
          pip install robotframework requests robotframework-requests

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq gnupg software-properties-common

      - name: Install K6
        run: |
          curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Set up sedge
        run: |
          echo 'Running sedge...'
          curl -LO https://github.com/NethermindEth/sedge/releases/download/v0.5.0/sedge-v0.5.0-linux-amd64.tar.gz
          tar -xzf sedge-v0.5.0-linux-amd64.tar.gz
          chmod +x sedge
          ./sedge deps install >>sedge.logs
          ./sedge generate --logging none -p $HOME full-node \
            --map-all --no-mev-boost --no-validator \
            --network chiado -c lighthouse:sigp/lighthouse:latest \
            -e nethermind:nethermindeth/nethermind:master \
            --el-extra-flag Sync.NonValidatorNode=true \
            --el-extra-flag Sync.DownloadBodiesInFastSync=false \
            --el-extra-flag Sync.DownloadReceiptsInFastSync=false \
            --el-extra-flag JsonRpc.EnabledModules=[Eth,TxPool,Web3,Net,Health,Rpc,Debug] \
            --cl-extra-flag checkpoint-sync-url=http://139.144.26.89:4000/ >>sedge.logs
          ./sedge run -p . >>sedge.logs

      - name: Wait for Ethereum client to sync
        run: |
          echo "Waiting for Ethereum client to sync..."
          for i in {1..60}; do
            if curl -sSf http://localhost:8545; then
              echo "Ethereum client is up and running"
              break
            fi
            echo "Ethereum client is not ready yet. Retrying in 10 seconds..."
            sleep 10
          done

      - name: Run Robot Framework tests
        run: |
          robot -d tests/robot/results tests/robot/test_suites

      - name: Run K6 load tests
        run: |
          k6 run --out json=tests/k6/results/load_test_results.json tests/k6/scripts/load_test.js

      - name: Upload Robot Framework results
        uses: actions/upload-artifact@v2
        with:
          name: robot-results
          path: tests/robot/results/

      - name: Upload K6 results
        uses: actions/upload-artifact@v2
        with:
          name: k6-results
          path: tests/k6/results/load_test_results.json
